#define ABILITY_EOMA_STATUECOPY
    [dummy]
        id=eoma_statuecopy
        name= _ "statue copy"
        description=_"This unit can create a living statue from any adjacent petrified unit (or any of your normal units, but the process ends the turn of both units). The statues have similar stats than the unit they are based on, but will always be slightly weaker, slower and weak to arcane. Making a statue costs 50% of the original unit price."
    [/dummy] # wmlxgettext: [abilities]
[/abilities]

[event]
    name=select,recruit,recall
    id=eoma_statuecopy_select_event
    first_time_only=no
    [filter]
        ability=eoma_summon
        side=$side_number
    [/filter]

    [store_unit]
        [filter]
            x,y=$x1,$y1
        [/filter]
        variable=last_selected_unit
    [/store_unit]
    [allow_undo]
    [/allow_undo]
[/event]

[event]
    name=start,post advance,unit placed
    id=eoma_statuecopy_init_event
    first_time_only=no

    {STATUECOPY_MENU_ITEM}
[/event]

[event]
    name=scenario_end
	id=eoma_statuecopy_cleanup
    first_time_only=no

    [store_unit]
        [filter]
            trait=copied
        [/filter]
        variable=copies
    [/store_unit]
	[kill]
		find_in=copies
		animate=no
		fire_event=no
	[/kill]
[/event]

[+abilities] # wmlxgettext: [/abilities]
#enddef

#define STATUECOPY_MENU_ITEM
    [set_menu_item]
        id=statuecopy
        description=_ "Make a copy"
        [show_if]
#ifdef MULTIPLAYER
            [EoMa_not_rpg]
            [/EoMa_not_rpg]
#endif
        [/show_if]

        [filter_location]
            [filter_adjacent_location]
                [filter]
                    type=EoMa_Architect
                    side=$side_number
                    [filter_wml]
                        moves=$this_unit.max_moves
                    [/filter_wml]
                [/filter]
            [/filter_adjacent_location]
			[filter]
				status=petrified
			[/filter]
			[or]
				[filter_adjacent_location]
					[filter]
						type=EoMa_Architect
						side=$side_number
						[filter_wml]
							moves=$this_unit.max_moves
						[/filter_wml]
					[/filter]
				[/filter_adjacent_location]
				[filter]
					[filter_side]
						[allied_with]
							side=$side_number
						[/allied_with]
					[/filter_side]
					[filter_wml]
                        moves=$this_unit.max_moves
                    [/filter_wml]
				[/filter]
			[/or]
			[not]
				[filter]
					trait=copied
				[/filter]
			[/not]
        [/filter_location]
        [command]
			[store_gold]
                variable=actual_gold
                side=$side_number
            [/store_gold]
			[store_unit]
				[filter]
					x,y=$x1,$y1
				[/filter]
				variable=statue_target
			[/store_unit]
			{VARIABLE gold_check $statue_target.cost}
			{DEBUG "actual_gold: "+$actual_gold}
			{VARIABLE_OP gold_check divide 2}
			{VARIABLE_OP gold_check round ceil}
			{DEBUG "gold_check: "+$gold_check}
            {IF_VAR actual_gold greater_than_equal_to $gold_check (
                [then]
					{VARIABLE_OP gold_check multiply -1}
                    [gold]
                        amount=$gold_check
                        side=$side_number
                    [/gold]
					{VARIABLE_OP gold_check multiply -1}
					{VARIABLE statue_target.attacks_left 0}
					{VARIABLE statue_target.moves 0}
					[unstore_unit]
						variable=statue_target
						find_vacant=no
						red,green,blue=50,50,50
					[/unstore_unit]
					#alter ids
					{RANDOM 1..9999}
					{VARIABLE statue_id "statue"+$random}
					{VARIABLE statue_target.id $statue_id}
					#add the copy trait
					## slightly weaker, slower, less resistant and weak to Arcane
					{VARIABLE temp $statue_target.modifications.trait.length}
					{VARIABLE statue_target.modifications.trait[$temp].id "copied"}
					{VARIABLE statue_target.modifications.trait[$temp].name (_ "copied")}
					{VARIABLE statue_target.modifications.trait[$temp].description (_ "<span color='red'>-50%</span> to arcane resistance
<span color='red'>-20%</span> to all other resistances
<span color='red'>-20%</span> to damage")}
					{VARIABLE statue_target.modifications.trait[$temp].effect[0].apply_to "movement"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[0].increase "-1"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[1].apply_to "hitpoints"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[1].increase_total "-50%"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[2].apply_to "resistance"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[2].replace "no"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[2].resistance.arcane "30"}
					## {VARIABLE statue_target.modifications.trait[$temp].effect[2].resistance.fire "20"}
					## {VARIABLE statue_target.modifications.trait[$temp].effect[2].resistance.cold "20"}
					## {VARIABLE statue_target.modifications.trait[$temp].effect[2].resistance.blade "20"}
					## {VARIABLE statue_target.modifications.trait[$temp].effect[2].resistance.impact "20"}
					## {VARIABLE statue_target.modifications.trait[$temp].effect[2].resistance.pierce "20"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[3].apply_to "image_mod"}
					{VARIABLE statue_target.modifications.trait[$temp].effect[3].replace "CS(0,0,200)"}
					{VARIABLE unit.modifications.trait[$temp].effect[4].apply_to "attack"}
					{VARIABLE unit.modifications.trait[$temp].effect[4].increase_damage "-20%"}
					#for some reason actions above take no effect on a copied unit despite the trait being visible - fix manually:
					{VARIABLE_OP statue_target.max_moves add -1}
					{VARIABLE_OP statue_target.max_hitpoints multiply 0.7}
					{IF_VAR statue_target.hitpoints greater_than $statue_target.max_hitpoints (
						[then]
							{VARIABLE statue_target.hitpoints $statue_target.max_hitpoints}
						[/then]
					)}
					{VARIABLE_OP statue_target.resistance.arcane add 50}
					{VARIABLE_OP statue_target.resistance.fire add 20}
					{VARIABLE_OP statue_target.resistance.cold add 20}
					{VARIABLE_OP statue_target.resistance.blade add 20}
					{VARIABLE_OP statue_target.resistance.pierce add 20}
					{VARIABLE_OP statue_target.resistance.impact add 20}
					
					{VARIABLE statue_target.side $side_number}
					
					[unstore_unit]
						variable=statue_target
						find_vacant=yes
						text= _ "Copied!"
						red,green,blue=255,255,255
					[/unstore_unit]
					[object]
						silent=yes
						duration=scenario
						[filter]
							id=$statue_id
						[/filter]
						[effect]
							apply_to=image_mod
							replace="CS(0,0,200)"
						[/effect]
						[effect]
							apply_to=new_animation
							[animation]
								apply_to=copyfx
								[frame]
									alpha=0~1:600
								[/frame]
							[/animation]
						[/effect]
						[effect]
							apply_to=attack
							increase_damage=-20%
						[/effect]
					[/object]
					
					[animate_unit]
						flag=copyfx
						[filter]
							id=$statue_id
						[/filter]
					[/animate_unit]
					
					[unpetrify]
						id=$statue_id
					[/unpetrify]
					
					{CLEAR_VARIABLE statue_id}
					
					[store_unit]
						[filter]
							type=EoMa_Architect
							side=$side_number
							[filter_wml]
								moves=$this_unit.max_moves
							[/filter_wml]
							[filter_adjacent]
								x,y=$x1,$y1
							[/filter_adjacent]
						[/filter]
						variable=architectvar
					[/store_unit]
					{IF_VAR architectvar.length greater_than 1 (
						[then]
							[foreach]
								array=architectvar
								[do]
									{IF_VAR this_item.id equals $last_selected_unit.id (
										[then]
											{VARIABLE this_item.attacks_left 0}
											{VARIABLE this_item.moves 0}
											## {VARIABLE_OP this_item.experience add 3}

											[unstore_unit]
												variable=this_item
												find_vacant=no
												## text= _ "+3 exp"
												red,green,blue=50,50,200
											[/unstore_unit]
											[animate_unit]
												flag=copy
												[filter]
													id=$this_item.id
												[/filter]
											[/animate_unit]
											{CLEAR_VARIABLE architectvar}
										[/then]
										[else]
											[filter_condition]
												[variable]
													name=last_selected_unit.id
													equals=$empty
												[/variable]
												[or]
													[have_unit]
														id=$last_selected_unit.id
														[not]
															[filter_adjacent]
																x,y=$x1,$y1
															[/filter_adjacent]
														[/not]
													[/have_unit]
												[/or]
											[/filter_condition]

											[store_unit]
												[filter]
													id=this_item.id
												[/filter]
												variable=last_selected_unit
											[/store_unit]
											{VARIABLE this_item.attacks_left 0}
											{VARIABLE this_item.moves 0}
											## {VARIABLE_OP this_item.experience add 3}

											[unstore_unit]
												variable=this_item
												find_vacant=no
												## text= _ "+3 exp"
												red,green,blue=50,50,200
											[/unstore_unit]
											[animate_unit]
												flag=copy
												[filter]
													id=$this_item.id
												[/filter]
											[/animate_unit]
											{CLEAR_VARIABLE architectvar}
										[/else]
									)}
								[/do]
							[/foreach]
						[/then]
						[else]
							[store_unit]
								variable=architectvar
								[filter]
									type=EoMa_Architect
									side=$side_number
									[filter_wml]
										moves=$this_unit.max_moves
									[/filter_wml]
									[filter_adjacent]
										x,y=$x1,$y1
									[/filter_adjacent]
								[/filter]
							[/store_unit]
							{VARIABLE architectvar.attacks_left 0}
							{VARIABLE architectvar.moves 0}
							## {VARIABLE_OP architectvar.experience add 3}

							[unstore_unit]
								variable=architectvar
								find_vacant=no
								## text= _ "+3 exp"
								red,green,blue=50,50,200
							[/unstore_unit]
							[animate_unit]
								flag=copy
								[filter]
									id=$architectvar.id
								[/filter]
							[/animate_unit]
							{CLEAR_VARIABLE architectvar}
							[fire_event]
								name=post copy
								[primary_unit]
									x,y=$x1,$y1
								[/primary_unit]
							[/fire_event]
						[/else]
					)}
				[/then]
				[else]
					[message]
						speaker=narrator
						side_for=$side_number
						caption=_ "Error"
						message= _ "Not enough gold! To copy this unit, you need at least "+$gold_check|+" "+ _ "pieces of gold."
						image=wesnoth-icon.png
					[/message]
				[/else]
			)}
			{CLEAR_VARIABLE statue_target}
			{CLEAR_VARIABLE gold_check}
			{CLEAR_VARIABLE actual_gold}
			{CLEAR_VARIABLE temp}
        [/command]
	[/set_menu_item]
#enddef